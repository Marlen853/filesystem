# linter
# def
# Рекомендуется


# name = 'Иван Петров'
# first_name, last_name = name.split()
# Рекомендуется
# def multiply_by_two(x):
# return x * 2
# Flake8 - линтер. Указывает на ошибки форматирования кода
# Black Formatter - форматтер.
# Устраняет ошибки форматирования
# PEP8 - правила написания, форматирования
# кода (Python enhancement proposal 8)
# 19:46 - 20:01
# 1. PEP8 - официальный стандарт написания кода
# 2. Когда пишем по стандарту, делаем код читабельнее для себя, коллег.
# 3. Помогает совершать меньше ошибок
# 4. Отступы - 4 пробела или 1
# таб (потому что 1 таб = 4 пробела) .
# Отступы используются в циклах, функциях, логических операторах, классах, try/
# except/finally,
# Отступы используються для разграничений блоков кода
# 5. Максимальная длина строки- 79 символов. Коментарий - 72симв ола

# 6. Импорты всегда наверху

# 7. Ставить пробелы вокругоператоров

# 8. Одна пустая строка в концефайла


# 9. Использовать snake_caseдля названия переменных,функций


# 10. Константы капсомSNAKE_CASE

# 11. Избегайте однобуквенныхназваний переменных

# 12. Если мы проверяем наTrue, False, то в сравненииMOKHO OnyCTMTb "== True"！

# Например

# is_ fired_from_prev_job = True

# if is_fired_from_prev_job ==True можно сократить до ifis_fired_from_prev_job

# 13. Всегда вкладывать смысл вназвания переменных, функций,классов


# 14. Минимизироватьвложенность. Например не делать так


# if action == "Умножение":

print("Четное" if int(input("Введите число: ")) % 2 == 0 else "Нечетное")


score = int(input("Введите оценку (0-100): "))

if score >= 90:
    print("Отлично")

elif score >= 70:
    print("Хорошо")
elif score >= 50:
    print("Удовлетворительно")
else:
    print("Неудовлетворительно")
